* get terminal width via native code
  - MSDN console API
  - terminal info for unix
* Preparse make an options to call handlers in specfication-order.
  I.e. given
     [  flag .. "a" ..
      , flag .. "b" ..]
   If the command line is:
    % foo -b .. -a
   we still process -a before -b
  How to consider options in this....?

- constraints?
* Mutexes
* Partial orderings (e.g. must parse x after y)

* Come up with a [String] example and [Int] example
   (has to be derived)


* Cleaner way of dealing with String than runtime hacking
(overlapped instances (with Read)? could we make it so
we provide default Read for all, but if user gives us
an instance, we prefer that insted?)

* Make the parsing algorithm pluggable?


* Support option groups
    -pH -ptm0, -Xfoo, -Xbar -WaKus
     [  (group "X" "Experimental Options") [
          opt "" "Xfoo" ...
        , flag "" "Xbar" ...
        ]
        (group "p" "Profile Options") [
           flag "" ... -- defines flag for -p (-h=p prints info on both p and p's children)
        ]
        (group "Wa" "Workarounds") [
        ]
     ]
    * can put these in with all options
       - make opt and flag return an OptElem o
          data OptElem o = OptElemSpec (OptSpec o) | OptElemGroup (OptGroup o)
    * ***OR*** make opt groups a special OptSpec
               give it children OptSpec's
               the default meaning for a group optspec is trigger to
               print the help on that option and exit
      gives the group some AST information (so we know to treat it specially)
      => Usage shows "-X..."
      => Typing "-X" shows usage specific
      => malformed input with a prefixed group -Xeror
         shows usage of -X options rather than global
         (maybe "did you mean will be good enough)

